package com.lyeeedar.Components

import com.badlogic.gdx.utils.ObjectMap
import com.lyeeedar.Renderables.Renderable
import com.lyeeedar.Util.AssetManager
import com.lyeeedar.Util.XmlData
import ktx.collections.set

inline fun Entity.additionalRenderable(): AdditionalRenderableComponent? = this.components[ComponentType.AdditionalRenderable] as AdditionalRenderableComponent?
class AdditionalRenderableComponent(data: AdditionalRenderableComponentData) : AbstractComponent<AdditionalRenderableComponentData>(data)
{
	override val type: ComponentType = ComponentType.AdditionalRenderable

	override fun reset()
	{

	}
}

class AdditionalRenderableComponentData : AbstractComponentData()
{
	val classID: String = "AdditionalRenderable"
	
	val below = ObjectMap<String, Renderable>()
	val above = ObjectMap<String, Renderable>()

	override fun load(xmlData: XmlData)
	{
	/* Autogenerated method contents. Do not modify. */
		super.load(xmlData)
	}
}